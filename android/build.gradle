buildscript {
	ext.kotlin_version = "1.4.20"
	repositories {
		google()
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath "com.android.tools.build:gradle:4.1.2"
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

		classpath 'com.vanniktech:gradle-maven-publish-plugin:0.13.0'
		classpath 'org.jetbrains.dokka:dokka-gradle-plugin:1.4.10.2'
	}
}

repositories {
	google()
	jcenter()
	mavenCentral()
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.vanniktech.maven.publish'

android {
	compileSdkVersion 30

	defaultConfig {
		minSdkVersion 23
		targetSdkVersion 30
		versionCode 130
		versionName VERSION_NAME

		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
		consumerProguardFiles 'consumer-rules.pro'
		externalNativeBuild {
			cmake {
				arguments "-DANDROID_STL=c++_shared"
				cppFlags "-std=c++17 -frtti -fexceptions"
			}
		}
	}

	externalNativeBuild {
		cmake {
			path "CMakeLists.txt"
		}
	}

	sourceSets {
		main {
			java {
				srcDir 'src/main/java'
				srcDir '../bridging/android/java'
			}
		}
	}

	buildFeatures {
		prefabPublishing true
	}

	prefab{
		mapscore {
			headers ".cpp_includes"
			name "mapscore"
			version VERSION_NAME
		}
	}
}

/*task copyHeaders(type: Exec){
	commandLine './copy_all_header_files_to_include_folder.sh'
}
preBuild.dependsOn copyHeaders*/

ext.readProperty = { paramName -> readPropertyWithDefault(paramName, null) }
ext.readPropertyWithDefault = { paramName, defaultValue ->
	if (project.hasProperty(paramName)) {
		return project.getProperties().get(paramName)
	} else {
		Properties properties = new Properties()
		if (project.rootProject.file('local.properties').exists()) {
			properties.load(project.rootProject.file('local.properties').newDataInputStream())
		}
		if (properties.getProperty(paramName) != null) {
			return properties.getProperty(paramName)
		} else {
			return defaultValue
		}
	}
}

dependencies {
	implementation fileTree(dir: 'libs', include: ['*.jar'])
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
	implementation "androidx.annotation:annotation:1.1.0"
	implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.2.0"
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.2"

	implementation 'com.squareup.okhttp3:okhttp:4.7.2'

	testImplementation 'junit:junit:4.13.1'
	androidTestImplementation 'androidx.test.ext:junit:1.1.2'
	androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

clean.doLast {
	project.delete("${projectDir}/build")
	project.delete("${projectDir}/.cxx")
}